description = 'Spring Your Project'

apply plugin: 'base'

buildscript {
	repositories {
		maven { url 'https://repo.spring.io/plugins-release' }
		maven { url 'https://plugins.gradle.org/m2/' }
	}
	dependencies {
		classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
		classpath 'io.spring.gradle:spring-io-plugin:0.0.5.RELEASE'
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1"
		classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
		classpath "org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15"
		classpath "org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6"
	}
}

apply plugin: "org.asciidoctor.convert"

task moveResources {
	// Get the document resources
	ant.mkdir(dir: 'build/resources')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/html/docinfo-footer.html', dest: 'build/resources')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/html/docinfo.html', dest: 'build/resources')
	ant.mkdir(dir: 'build/resources/tocbot-3.0.2')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/javascript/tocbot-3.0.2/styles.css', dest: 'build/resources/tocbot-3.0.2')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/javascript/tocbot-3.0.2/tocbot.css', dest: 'build/resources/tocbot-3.0.2')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/javascript/tocbot-3.0.2/tocbot.js', dest: 'build/resources/tocbot-3.0.2')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/javascript/tocbot-3.0.2/tocbot.min.js', dest: 'build/resources/tocbot-3.0.2')
	ant.mkdir(dir: 'build/resources/stylesheets')
	ant.get(src: 'https://cdn.rawgit.com/spring-projects/spring-doc-resources/b75df1d0/src/main/resources/stylesheets/spring.css', dest: 'build/resources/stylesheets/spring.css')

	ant.copy(todir: 'build/working/') {
		fileset(dir: 'src/main/asciidoc')
	}
	ant.copy(todir: 'build/working/') {
		fileset(dir: 'build/resources')
	}
}

asciidoctor {
	sourceDir = file('build/working')
	sources {
		include '*.adoc'
	}
	resources {
		from(sourceDir) {
			include 'images/**'
			include 'stylesheets/**'
			include 'jsfiles/**'
			include 'tocbot-3.0.2/**'
		}
	}
	logDocuments = true
	/*
	  If you want Epub, use Maven. The Asciidoctor epub plugin for Gradle has a bug that
		doesn't work with our formatting. See
		https://github.com/asciidoctor/asciidoctor-epub3/issues/47. In particular, it dislikes
		inline code within headings, which is part of our standard. There are other issues,
		too.
	*/
	backends = ["html", "pdf"]
	options doctype: 'book', eruby: 'erubis'
	attributes = [toc: 'left',
			linkcss: '',
			icons: 'font',
			idprefix: '',
			idseparator: '-',
			docinfo: 'shared',
			sectanchors: '',
			sectnums: '',
			'source-highlighter': 'prettify',
			stylesdir: 'stylesheets/',
			stylesheet: 'spring.css',
			'allow-uri-read': '']

	doLast {
		// Move the files for the single-file HTML version
		ant.copy(file: 'build/asciidoc/html/index.html', tofile: 'build/contents/reference/htmlsingle/index.html')
		ant.copy(todir: 'build/contents/reference/htmlsingle/images') {
		    fileset(dir: 'build/asciidoc/html/images')
		}
		ant.copy(todir: 'build/contents/reference/htmlsingle/tocbot-3.0.2') {
		    fileset(dir: 'build/resources/tocbot-3.0.2')
		}
		ant.copy(file: 'build/resources/stylesheets/spring.css', tofile: 'build/contents/reference/htmlsingle/stylesheets/spring.css')
		ant.copy(file: 'build/resources/docinfo.html', tofile: 'build/contents/reference/htmlsingle/docinfo.html')
		ant.copy(file: 'build/resources/docinfo-footer.html', tofile: 'build/contents/reference/htmlsingle/docinfo-footer.html')

		// Move the files for the multi-file HTML version
		ant.copy(todir: 'build/contents/reference/html') {
			fileset(dir: 'build/asciidoc/html')
		}
		ant.delete() {
			fileset(dir: 'build/contents/reference/html') {
				include(name: 'index.html')
				include(name: 'index-multi.html')
				include(name: 'writing-advice.html')
			}
		}
		ant.copy(file: 'build/asciidoc/html/index-multi.html', tofile: 'build/contents/reference/html/index.html')
		ant.copy(todir: 'build/contents/reference/html/images') {
			fileset(dir: 'build/asciidoc/html/images')
		}
		ant.copy(todir: 'build/contents/reference/html/tocbot-3.0.2') {
			fileset(dir: 'build/resources/tocbot-3.0.2')
		}
		ant.copy(file: 'build/resources/stylesheets/spring.css', tofile: 'build/contents/reference/html/stylesheets/spring.css')
		ant.copy(file: 'build/resources/docinfo.html', tofile: 'build/contents/reference/html/docinfo.html')
		ant.copy(file: 'build/resources/docinfo-footer.html', tofile: 'build/contents/reference/html/docinfo-footer.html')

		// Move the PDF file
		ant.copy(file: 'build/asciidoc/pdf/index.pdf', tofile: 'build/contents/reference/pdf/your-project.pdf')
	}
}

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '3.5'
}
